// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Produccion_Back.Datos.Modelos;

public partial class TurnosDBContext : DbContext
{
    public TurnosDBContext(DbContextOptions<TurnosDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<DetalleTurno> DetalleTurnos { get; set; }

    public virtual DbSet<Servicio> Servicios { get; set; }

    public virtual DbSet<Turno> Turnos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DetalleTurno>(entity =>
        {
            entity.HasKey(e => e.IdDetalle).HasName("pkDetalleTurnos");

            entity.Property(e => e.IdDetalle).HasColumnName("idDetalle");
            entity.Property(e => e.IdServicio).HasColumnName("idServicio");
            entity.Property(e => e.IdTurno).HasColumnName("idTurno");

            entity.HasOne(d => d.IdServicioNavigation).WithMany(p => p.DetalleTurnos)
                .HasForeignKey(d => d.IdServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fkServiciosDetalle");

            entity.HasOne(d => d.IdTurnoNavigation).WithMany(p => p.DetalleTurnos)
                .HasForeignKey(d => d.IdTurno)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fkTurnosDetalle");
        });

        modelBuilder.Entity<Servicio>(entity =>
        {
            entity.HasKey(e => e.IdServicio).HasName("pkServicios");

            entity.Property(e => e.IdServicio).HasColumnName("idServicio");
            entity.Property(e => e.Costo)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("costo");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Turno>(entity =>
        {
            entity.HasKey(e => e.IdTurno).HasName("pkTurnos");

            entity.Property(e => e.IdTurno).HasColumnName("idTurno");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("fecha");
            entity.Property(e => e.IdCliente).HasColumnName("idCliente");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}